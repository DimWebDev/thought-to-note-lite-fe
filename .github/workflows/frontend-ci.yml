name: CI Pipeline for Thought-to-Note Lite Frontend

# Trigger the workflow on the following events:
on:
  # Trigger on pushes to main, develop, and any feature branches
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'
    tags:
      - 'v*.*.*'  # Optional: Trigger on version tags like v1.0.0

  # Trigger on pull requests targeting main, develop, and any feature branches
  pull_request:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'

  # Allow manual triggering of the workflow
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Node.js environment (Specify the version you are using, e.g., 18.x)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'  # same version as in local development
          cache: 'npm'

      # 3. Cache node_modules to speed up installations
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4. Install dependencies
      - name: Install Dependencies
        run: npm ci

      # 5. Run Tests
      - name: Run Tests
        run: npm test -- --coverage
        env:
          CI: true

      # 6. Build the application
      - name: Build Application
        run: npm run build

      # 7. (Optional) Upload Test Coverage Report
      - name: Upload Coverage Report
        if: success() && always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/

      # 8. (Optional) Upload Build Artifacts
      - name: Upload Build Artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/
